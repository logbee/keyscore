buildscript {
    repositories { mavenCentral() }
    dependencies { classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3' }
}

apply plugin: 'scala'
apply plugin: 'org.junit.platform.gradle.plugin'
apply from: rootProject.file('dependencies.gradle')


import com.bmuschko.gradle.docker.tasks.network.DockerRemoveNetwork

repositories {
    mavenCentral()
}

dependencies {
    compile project(':keyscore-model')
    compile project(':keyscore-commons')

    compile dependency.scala_lang
    compile dependency.slf4j
    compile dependency.json4s

    testCompile dependency.scala_test
    testCompile dependency.citrus
    testCompile dependency.junit
    testRuntime dependency.junitRuntime

    testCompile project(path: ':keyscore-agent', configuration: 'testOutput')
}

task removeContainerNetwork(type: DockerRemoveNetwork) {
    networkId = project.properties['containerNetwork']
}


task runContainers(){
    dependsOn = [
            ':keyscore-frontier:startDockerContainer',
            ':keyscore-agent:startDockerContainer',
            'elasticsearch:startContainer',
            'kafka:createKafkaTopics',
    ]
    doLast {
        sleep(10000)
    }
}

task stopContainers() {
    dependsOn = [
            ':keyscore-frontier:removeDockerContainer',
            ':keyscore-agent:removeDockerContainer',
            'elasticsearch:removeContainer',
            'kafka:removeContainer'
    ]
    finalizedBy removeContainerNetwork
}

task removeOldContainers(){
    dependsOn = [
            ':keyscore-frontier:removeDockerContainer',
            ':keyscore-agent:removeDockerContainer',
            'elasticsearch:removeContainer',
            'kafka:removeContainer'
    ]
}

task startContainers() {
    dependsOn removeOldContainers
    finalizedBy runContainers
}

junitPlatformTest {
    dependsOn startContainers
    finalizedBy stopContainers
    outputs.upToDateWhen { false }
}

afterEvaluate {
    def junitPlatformTestTask = tasks.getByName('junitPlatformTest')
    junitPlatformTestTask.systemProperty 'citrus.html.report.directory', "$buildDir/test-results/citrus-reports"
}

