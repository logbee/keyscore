syntax = "proto3";

import "scalapb/scalapb.proto";
import "io/logbee/keyscore/descriptor.proto";
import "io/logbee/keyscore/parameter-descriptor.proto";
import "io/logbee/keyscore/data.proto";

option (scalapb.options) = {
    package_name: "io.logbee.keyscore.model.configuration"
    flat_package: true
};

message ConfigurationRef {
    option (scalapb.message).companion_extends = "io.logbee.keyscore.model.configuration.ConfigurationRefCompanion";
    string uuid = 1;
    string revision = 2;
    string ancestor = 3;
}

message Configuration {
    option (scalapb.message).extends = "io.logbee.keyscore.model.configuration.QueryableConfiguration";
    option (scalapb.message).companion_extends = "io.logbee.keyscore.model.configuration.ConfigurationCompanion";
    ConfigurationRef ref = 1 [(scalapb.field).no_box = true];
    ConfigurationRef parent = 2;
    ParameterSet parameterSet = 3 [(scalapb.field).no_box = true];
}

message Parameter {
    oneof sealed_value {
        BooleanParameter boolean = 1;
        TextParameter text = 2;
        ExpressionParameter expression = 3;
        NumberParameter number = 4;
        DecimalParameter decimal = 5;
        FieldNameParameter fieldName = 6;
        FieldNamePatternParameter fieldPatternName = 7;
        FieldParameter field = 8;
        TextListParameter textList = 9;
        FieldNameListParameter fieldNameList = 10;
        FieldListParameter fieldList = 11;
        ChoiceParameter choice = 12;
        FieldDirectiveSequenceParameter directiveSequences = 13;
        FieldDirectiveSequenceConfiguration directives = 14;
        DirectiveConfiguration directive = 15;
    }
}

message ParameterSet {
    option (scalapb.message).extends = "io.logbee.keyscore.model.configuration.QueryableParameterSet";
    repeated Parameter parameters = 1;
}

message BooleanParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    bool value = 2;
}

message TextParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    string value = 2;
}

message ExpressionParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    string value = 2;
    string choice = 3;
}

message NumberParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    sint64 value = 2;
}

message DecimalParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    double value = 2;
}

message FieldNameParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    string value = 2;
}

message FieldNamePatternParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    string value = 2;
    FieldNamePatternParameterDescriptor.PatternType patternType = 3;
}

message FieldParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    Field value = 2;
}

message TextListParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    repeated string value = 2;
}

message FieldNameListParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    repeated string value = 2;
}

message FieldListParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    repeated Field value = 2;
}

message ChoiceParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    string value = 2;
}

message FieldDirectiveSequenceParameter {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    repeated FieldDirectiveSequenceConfiguration value = 2;
}

message FieldDirectiveSequenceConfiguration {
    string id = 1;
    ParameterSet parameters = 2 [(scalapb.field).no_box = true];
    repeated DirectiveConfiguration directives = 3;
}

message DirectiveConfiguration {
    DirectiveRef ref = 1 [(scalapb.field).no_box = true];
    DirectiveInstanceRef instance = 2 [(scalapb.field).no_box = true];
    ParameterSet parameters = 3 [(scalapb.field).no_box = true];
}
