syntax = "proto3";

import "scalapb/scalapb.proto";
import "localization.proto";

option (scalapb.options) = {
    package_name: "io.logbee.keyscore.model"
    flat_package: true
};

message Descriptor {
    option (scalapb.message).companion_extends = "io.logbee.keyscore.model.DescriptorCompanion";
    string id = 1;
    Describe describe = 2;
    Localization localization = 15;
}

message Describe {
    oneof sealed_value {
        FilterDescriptor filter = 1;
    }
}

message FilterDescriptor {
    string name = 1;
    TextRef displayName = 2 [(scalapb.field).no_box = true];
    TextRef description = 3 [(scalapb.field).no_box = true];
    TextRef category = 4;
    repeated ParameterDescriptor parameters = 5;
}

message ParameterRef {
    option (scalapb.message).companion_extends = "io.logbee.keyscore.model.ParameterRefCompanion";
    string id = 1;
}

message ParameterInfo {
    TextRef displayName = 2 [(scalapb.field).no_box = true];
    TextRef description = 3;
}

message ParameterDescriptor {
    oneof sealed_value {
        TextParameterDescriptor textParameter = 1;
        BooleanParameterDescriptor booleanParameter = 2;
        FieldNameParameterDescriptor fieldNameParameter = 3;
        ListParameterDescriptor listParameter = 4;
        ConditionalParameterDescriptor conditionalParameter = 5;
    }
}

message TextParameterDescriptor {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    ParameterInfo info = 2;
    string defaultValue = 3;
    TextPattern pattern = 4;
}

message BooleanParameterDescriptor {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    ParameterInfo info = 2;
    bool defaultValue = 3;
}

message FieldNameParameterDescriptor {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    ParameterInfo info = 2;
    string defaultValue = 3;
    TextPattern pattern = 4;
    FieldNameHint hint = 5;
    enum FieldNameHint {
        AnyField = 0;
        PresentField = 1;
        AbsentField = 2;
    }
}

message ListParameterDescriptor {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    ParameterInfo info = 2;
    ParameterDescriptor kind = 3;
}

message ConditionalParameterDescriptor {
    ParameterRef ref = 1 [(scalapb.field).no_box = true];
    ParameterInfo info = 2;
    ConditionalParameterCondition condition = 3 [(scalapb.field).no_box = true];
    repeated ParameterDescriptor parameters = 4;
}

message ConditionalParameterCondition {
    oneof sealed_value {
        BooleanParameterCondition booleanParameterCondition = 1;
    }
}

message BooleanParameterCondition {
    ParameterRef parameter = 2 [(scalapb.field).no_box = true];
    bool negate = 3;
}

message TextPattern {
    enum PatternType {
        RegEx = 0;
        Grok = 1;
        AbsentField = 2;
    }
}