plugins {
    id "com.bmuschko.docker-remote-api" version "3.2.1"
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

apply plugin: 'scala'
apply from: rootProject.file('dependencies.gradle')

repositories {
    mavenCentral()
}

project.ext {
    distributionDir = "$buildDir/distribution"

}

dependencies {

    compile project(':keyscore-model')

    compile dependency.scala_lang
    compile dependency.slf4j
    compile dependency.akka_actor
    compile dependency.akka_persistence
    compile dependency.akka_stream
    compile dependency.akka_slf4j
    compile dependency.akka_http
    compile dependency.akka_persistence
    compile dependency.akka_stream_kafka

    compile dependency.json4s

    testCompile dependency.json4s
    testCompile dependency.akka_testkit
}

jar {
    manifest.attributes ([
        'Main-Class': mainClass,
        'Implementation-Title': project.name,
        'Implementation-Version': version,
        'Class-Path': (configurations.runtime + configurations.compile).collect { "libs/" + it.getName() }.join(' ')
    ])
}

task buildDistribution(type: Copy, dependsOn: [jar]) {
    into project.distributionDir
    from('src/launcher/keyscore-frontier')
    from(jar.outputs) {
        rename("${project.name}-${version}.jar", "${project.name}.jar")
    }
    from(configurations.runtime) {
        into 'libs'
    }

}

task buildDockerfile(type: Dockerfile) {
    destFile = project.file("$buildDir/tmp/Dockerfile")
    from 'java:openjdk-8-jdk-alpine'
    instruction { "COPY build/distribution/ /opt/keyscore-frontier/" }
    instruction { "CMD /opt/keyscore-frontier/keyscore-frontier" }
    instruction { 'EXPOSE 4711' }
}

task buildDockerImage(type: DockerBuildImage, dependsOn: [buildDistribution, buildDockerfile]) {
    inputDir = projectDir
    dockerFile = buildDockerfile.destFile
    tag = 'logbee/keyscore-frontier:latest'
}
