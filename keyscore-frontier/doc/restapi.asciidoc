= The keyscore-frontier REST API =
v0.1.0, 2018-07-16
:toc:

The keyscore-frontier offers a REST API to control all aspects of keyscore.
Ths document is a brief summary of the most important parts of the API.
Due to the fact that the API is still work in progress this document will change.

[TIP]
====
For REST API testing, a browser extension is useful.
We recommend to use the following extensions:

* Chrome:   Restlet Client by Restlet
* Firefox:  RESTED by Espen H
====

== Commons ==
Within keyscore all entities have an UUID.


== Pipeline Configurations ==

The common url pattern to control pipelines starts with the prefix
`/pipeline`.

=== Get all pipeline configurations ===

==== Request ====

- Method: `GET`
- URL: `/pipeline/configuration/*`
- Payload: `<empty>`

==== Response ====
.*Case:* If there are any `PipelineConfiguration`.
- Code: `200 OK`
- Payload: Array of `PipelineConfiguration`

.*Case:* If there is no `PipelineConfiguration`.
- Code: `200 OK`
- Payload: `Empty Array`

=== Get a pipeline configuration ===

==== Request ====

- Method: `GET`
- URL: `/pipeline/configuration/<uuid>`
- Payload: `PipelineConfiguration`

==== Response ====
.*Case:* A pipeline with the specified UUID exists.
- Code: `200 OK`
- Payload: `PipelineConfiguration`

.*Case:* A pipeline with the specified UUID does not exists.
- Code: `404 NOT FOUND`
- Payload: `<empty>`

=== Create a pipeline configuration ===

==== Request ====

- Method: `PUT`
- URL: `/pipeline/configuration/`
- Payload: `PipelineConfiguration`

==== Response ====
.*Case:* A new `PipelineConfiguration` with the specified UUID has been created.
- *Code:* `201 Created`
- *Payload:* `<empty>`

.*Case:* A `PipelineConfiguration` with the specified UUID already exists.
- Code: `400 Bad Request`
- Payload: `<empty>`

=== Update a pipeline configuration ===

==== Request ====

- Method: `POST`
- URL: `/pipeline/configuration/`
- Payload: `PipelineConfiguration`

==== Response ====
.*Case:* The update of the `PipelineConfiguration` with the given UUID was successful.
- Code: `200 OK`
- Payload: `PipelineConfiguration`

.*Case:* There is no `PipelineConfiguration` with the given UUID.
- Code: `404 NOT FOUND`
- Payload: `<empty>`

=== Delete a pipeline configuration ===

==== Request ====

- Method: `DELTE`
- URL: `/pipeline/configuration/<uuid>`
- Payload: `<empty>`

==== Response ====
.*Case:* Deletion of the `PipelineConfiguration` with the given UUID was successful.
- Code: `200 OK`
- Payload: `<empty>`

.*Case:* There is no `PipelineConfiguration` with the given UUID.
- Code: `404 NOT FOUND`
- Payload: `<empty>`

=== Delete all pipeline configurations ===

==== Request ====

- Method: `DELTE`
- URL: `/pipeline/configuration/*`
- Payload: `<empty>`

==== Response ====
.*Case:* Deletion was successful.
- Code: `200 OK`
- Payload: `<empty>`

.*Case:* There was a problem deleting all pipeline configurations.
- Code:  `500 INTERNAL SERVER ERROR`
- Payload: `<empty>`

== Pipeline Instances ==

=== Get all pipeline instances ===

==== Request ====

- Method: `GET`
- URL: `/pipeline/instance/*`
- Payload: `<empty>`

==== Response ====
.*Case:* If there are any `PipelineInstance`.
- Code: 200 OK
- Payload: Array of `PipelineInstance`.

.*Case:* There is no `PipelineInstance` with the given UUID.
- Code: `200 OK`
- Payload: `Empty Array`

=== Get a pipeline instance ===

==== Request ====

- Method: `GET`
- URL: `/pipeline/instance/<uuid>`
- Payload: `<empty>`

==== Response ====
.*Case:* A `PipelineInstance` with the given UUID exists.
- Code: `200 OK`
- Payload: `PipelineInstance`

.*Case:* A `PipelineInstance` with the given UUID does not exist.
- Code: `404 NOT FOUND`
- Payload: `<empty>`


=== Create a pipeline instance ===

CAUTION: Not implemented yet

==== Request ====

- Method: `PUT`
- URL: `/pipeline/instance/<uuid>?<configId>`
- Payload: `<empty>`

==== Response ====
.*Case:* A new  `PipelineInstacne` with the given UUID and the `PipelineConfiguration` accessed by <configId> has been created.
- Code: `201 CREATED`
- Payload: `<empty>`

.*Case:* A `PipelineInstance` with the given UUID already exists.
- Code: `400 Bad Request`
- Payload: `<empty>`

=== Update a pipeline instance ===

CAUTION: Not implemented yet

==== Request ====

- Method: `POST`
- URL: `/pipeline/instance/<uuid>?<configId>`
- Payload: <empty>

==== Response ====
.*Case:* The update of the `PipelineInstacne` with the given UUID and the `PipelineConfiguration` accessed by <configId> was successfull.
- Code: `200 OK`
- Payload: `<empty>`

.*Case:* There is no `PipelineInstance` with the given UUID.
- Code: `404 NOT FOUND`
- Payload: `<empty>`

=== Delete all pipeline instance ===

CAUTION: Not implemented yet

==== Request ====

- Method: `DELTE`
- URL: `/pipeline/instance/*`
- Payload: `<empty>`

==== Response ====
.*Case:* Deletion was successful.
- Code: `200 OK`
- Payload: `<empty>`

.*Case:* There was a problem deleting all pipeline instances.
- Code: `500 INTERNAL SERVER ERROR`
- Payload: `<empty>`

== Filter ==

=== Get all filter descriptors ===

==== Request ====

- Method: `GET`
- URL: `/descriptors`
- Payload: `<empty>`

==== Response ====
.*Case:* Found descriptors
- Code: `200 OK`
- Payload: Array of `FilterDescriptor`

.*Case:* There was a problem getting the descriptors.
- Code: `500 INTERNAL SERVER ERROR`
- Payload: `<empty>`

=== Get a filter state ===

==== Request ====

- Method: `GET`
- URL: `/filter/<id>/state`
- Payload: `<empty>`

==== Response ====
.*Case:* Found filter state.
- Code: `202 ACCEPTED`
- Payload: `FilterState`

.*Case:* There was a problem finding the filter state.
- Code: `500 INTERNAL SERVER ERROR`
- Payload: `<empty>`

== Filter interactions ==

=== Pause a filter ===

==== Request ====

- Method: `POST`
- URL: `/filter/<id>/pause`
- Payload: `boolean`

==== Response ====
.*Case:* Pause was successful.
- Code: `202 ACCEPTED`
- Payload: `FilterState`

.*Case:* There was a problem pausing the filter.
- Code: `500 INTERNAL SERVER ERROR`
- Payload: `<empty>`

=== Drain a filter ===

==== Request ====

- Method: `POST`
- URL: `/filter/<id>/drain`
- Payload: `boolean`

==== Response ====
.*Case:* Drain was successful.
- Code: `202 ACCEPTED`
- Payload: `FilterState`

.*Case:* There was a problem draining the filter.
- Code: `500 INTERNAL SERVER ERROR`
- Payload: `<empty>`

=== Insert a dataset into a filter ===

==== Request ====

- Method: `PUT`
- URL: `/filter/<id>/insert`
- Payload: Array of `Dataset`

==== Response ====
.*Case:* Insert was successful.
- Code: `202 ACCEPTED`
- Payload: `FilterState`

.*Case:* There was a problem inserting data into the filter.
- Code: `500 INTERNAL SERVER ERROR`
- Payload: `<empty>`

=== Extracting datasets from a filter ===

==== Request ====

- Method: `GET`
- URL: `/filter/<id>/extract`
- Payload: `Integer` : how many datasets to extract

==== Response ====
.*Case:* Extract was successful.
- Code: `200 OK`
- Payload: Array of `Dataset`

.*Case:* There was a problem extracting data from the filter.
- Code: `500 INTERNAL SERVER ERROR`
- Payload: `<empty>`

== Filter configuration ==

=== Get a filter configuration ===

==== Request ====

- Method: `GET`
- URL: `/filter/<id>/config`
- Payload: `<empty>`

==== Response ====
.*Case:* Configuration found.
- Code: `200 OK`
- Payload: `FilterConfiguration`

.*Case:* Filter does not exist.
- Code: `404 NOT FOUND`
- Payload: `<empty>`

.*Case:* There was a problem finding the filter configuration.
- Code: `500 INTERNAL SERVER ERROR`
- Payload: `<empty>`

=== Configure a filter ===

==== Request ====

- Method: `PUT`
- URL: `/filter/<id>/config`
- Payload: `FilterConfiguration`

==== Response ====
.*Case:* Configuration was successful.
- Code: `200 OK`
- Payload: `FilterState`

.*Case:* There was a problem configuring the filter.
- Code: `500 INTERNAL SERVER ERROR`
- Payload: `<empty>`

== Agents ==

=== Get all running agents ===

==== Request ====

- Method: `GET`
- URL: `/agent`
- Payload: `<empty>`

==== Response ====
.*Case:* Call was successful and there are running agents.
- Code: `200 OK`
- Payload: Array of `AgentModel`


.*Case:* Call was successful and there are no running agents.
- Code: `200 OK`
- Payload: Empty array

.*Case:* There was a problem querying the agents.
- Code: `500 INTERNAL SERVER ERROR`
- Payload: `<empty>`

